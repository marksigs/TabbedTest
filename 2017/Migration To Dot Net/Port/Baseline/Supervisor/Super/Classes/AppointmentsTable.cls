VERSION 1.0 CLASS
BEGIN
  MultiUse = -1  'True
  Persistable = 0  'NotPersistable
  DataBindingBehavior = 0  'vbNone
  DataSourceBehavior  = 0  'vbNone
  MTSTransactionMode  = 0  'NotAnMTSObject
END
Attribute VB_Name = "AppointmentsTable"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = True
Attribute VB_PredeclaredId = False
Attribute VB_Exposed = False

'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
' Class         :   AppointmentsTable
' Description   :   Contains all access functions for the Appointments table.
' Change history
' Prog     Date         Description
' TW       05/02/2007   Generated by Supervisor Class Generator
' TW       05/02/2007   EP2_706 - Should  network be mandatory data for ar firms
' TW       13/02/2007   EP2_1334 - Removed restriction for STATUSCODE = 'Registered' on links
' TW       12/03/2007   EP2_1190 - Change Control 281 - AR Firm to nominate a single Network for Mortgage Business
'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
Option Explicit
Implements TableAccess

'Private data
Private m_clsTableAccess As TableAccess
Private m_sSearch As String

' Local constants
Private Const m_sTableName = "Appointments"
Private Const DELETE_FLAG_SET As Integer = 1

' Field Name constants
Private Const APPOINTMENTID As String = "APPOINTMENTID"
Private Const PRINCIPALFIRMID As String = "PRINCIPALFIRMID"
Private Const ARFIRMID As String = "ARFIRMID"
Private Const STATUSCODE As String = "STATUSCODE"
Private Const STATUSEFFECTIVEDATE As String = "STATUSEFFECTIVEDATE"
Private Const LASTUPDATEDDATE As String = "LASTUPDATEDDATE"
Private Const MORTGAGENETWORKIND As String = "MORTGAGENETWORKIND"


Private m_sFirstMatch As String

'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
' Function      :   Class_Initialize
' Description   :   VB Calls this method when the class is created. Do any initialisation here
'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
Private Sub Class_Initialize()
    Dim colFields As New Collection

    Set m_clsTableAccess = New TableAccess
    
    m_clsTableAccess.Create m_sTableName
    
    ' Key fields
   colFields.Add APPOINTMENTID

    m_clsTableAccess.SetKeyMatchFields colFields

    ' Order criteria used when executing queries

End Sub

''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
' Get Access Functions
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
Friend Function GetAppointmentID() As String
    GetAppointmentID = CStr(m_clsTableAccess.GetVal(APPOINTMENTID))
End Function
Friend Function GetPrincipalFirmID() As String
    GetPrincipalFirmID = CStr(m_clsTableAccess.GetVal(PRINCIPALFIRMID))
End Function
Friend Function GetARFirmID() As String
    GetARFirmID = CStr(m_clsTableAccess.GetVal(ARFIRMID))
End Function
Friend Function GetStatuscode() As String
    GetStatuscode = CStr(m_clsTableAccess.GetVal(STATUSCODE))
End Function
Friend Function GetStatuseffectivedate() As String
    GetStatuseffectivedate = CStr(m_clsTableAccess.GetVal(STATUSEFFECTIVEDATE))
End Function
Friend Function GetLastupdateddate() As String
    GetLastupdateddate = CStr(m_clsTableAccess.GetVal(LASTUPDATEDDATE))
End Function

''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
' Set Access Functions
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
Friend Function SetAppointmentID(sValue As Variant) As Boolean
    SetAppointmentID = m_clsTableAccess.SetVal(APPOINTMENTID, CVar(sValue))
End Function
Friend Function SetPrincipalfirmID(sValue As Variant) As Boolean
    SetPrincipalfirmID = m_clsTableAccess.SetVal(PRINCIPALFIRMID, CVar(sValue))
End Function
Friend Function SetARFirmID(sValue As Variant) As Boolean
    SetARFirmID = m_clsTableAccess.SetVal(ARFIRMID, CVar(sValue))
End Function
Friend Sub SetFindLinkedBrokerAppointmentRecords(strARFirmID As String)
    
' TW 13/02/2007 EP2_1334
'    m_sFirstMatch = "SELECT PRINCIPALFIRMNAME, REPLACE(REPLACE(LTRIM(" & _
'                        "ISNULL(ADDRESSLINE1, '') + ' ' + ISNULL(ADDRESSLINE2, '') + ' ' + ISNULL(ADDRESSLINE3, '') + ' ' + ISNULL(ADDRESSLINE4, '') + ' ' + ISNULL(ADDRESSLINE5, '') + ' ' + ISNULL(ADDRESSLINE6, '') + ' ' + " & _
'                        "ISNULL(POSTCODE, '')) , '  ', ' '), '  ', ' ') AS ADDRESS, " & _
'                        "AGREEDPROCFEERATE, VOLPROCFEEADJUSTMENT, A.APPOINTMENTID, A.PRINCIPALFIRMID FROM APPOINTMENTS A INNER JOIN PRINCIPALFIRM M ON A.PRINCIPALFIRMID = M.PRINCIPALFIRMID " & _
'                    " WHERE A.ARFIRMID = '" & strARFirmID & "' AND STATUSCODE = 'Registered'"

' TW 12/03/2007 EP2_1190
'    m_sFirstMatch = "SELECT PRINCIPALFIRMNAME, REPLACE(REPLACE(LTRIM(" & _
'                        "ISNULL(ADDRESSLINE1, '') + ' ' + ISNULL(ADDRESSLINE2, '') + ' ' + ISNULL(ADDRESSLINE3, '') + ' ' + ISNULL(ADDRESSLINE4, '') + ' ' + ISNULL(ADDRESSLINE5, '') + ' ' + ISNULL(ADDRESSLINE6, '') + ' ' + " & _
'                        "ISNULL(POSTCODE, '')) , '  ', ' '), '  ', ' ') AS ADDRESS, " & _
'                        "AGREEDPROCFEERATE, VOLPROCFEEADJUSTMENT, A.APPOINTMENTID, A.PRINCIPALFIRMID FROM APPOINTMENTS A INNER JOIN PRINCIPALFIRM M ON A.PRINCIPALFIRMID = M.PRINCIPALFIRMID " & _
'                    " WHERE A.ARFIRMID = '" & strARFirmID & "'"
    
    m_sFirstMatch = "SELECT PRINCIPALFIRMNAME, REPLACE(REPLACE(LTRIM(" & _
                        "ISNULL(ADDRESSLINE1, '') + ' ' + ISNULL(ADDRESSLINE2, '') + ' ' + ISNULL(ADDRESSLINE3, '') + ' ' + ISNULL(ADDRESSLINE4, '') + ' ' + ISNULL(ADDRESSLINE5, '') + ' ' + ISNULL(ADDRESSLINE6, '') + ' ' + " & _
                        "ISNULL(POSTCODE, '')) , '  ', ' '), '  ', ' ') AS ADDRESS, " & _
                        "AGREEDPROCFEERATE, VOLPROCFEEADJUSTMENT, ISNULL(A.MORTGAGENETWORKIND, 0) AS MORTGAGENETWORKIND, A.APPOINTMENTID, A.PRINCIPALFIRMID FROM APPOINTMENTS A INNER JOIN PRINCIPALFIRM M ON A.PRINCIPALFIRMID = M.PRINCIPALFIRMID " & _
                    " WHERE A.ARFIRMID = '" & strARFirmID & "'"
' TW 12/03/2007 EP2_1190 End
' TW 13/02/2007 EP2_1334 End
    
    m_clsTableAccess.Create m_sTableName, m_sFirstMatch
End Sub


Friend Function SetStatuscode(sValue As Variant) As Boolean
    SetStatuscode = m_clsTableAccess.SetVal(STATUSCODE, CVar(sValue))
End Function
Friend Function SetMortgageNetworkInd(sValue As Variant) As Boolean
' TW 12/03/2007 EP2_1190
    SetMortgageNetworkInd = m_clsTableAccess.SetVal(MORTGAGENETWORKIND, CVar(sValue))
' TW 12/03/2007 EP2_1190 End
End Function
Friend Function SetStatuseffectivedate(sValue As Variant) As Boolean
    SetStatuseffectivedate = m_clsTableAccess.SetVal(STATUSEFFECTIVEDATE, CVar(sValue))
End Function

Friend Function SetLastupdateddate(sValue As Variant) As Boolean
    SetLastupdateddate = m_clsTableAccess.SetVal(LASTUPDATEDDATE, CVar(sValue))
End Function

''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
' General Access Functions
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''

Private Function TableAccess_DoesRecordExist(colMatchData As Collection, Optional colMatchFields As Collection) As Boolean
    TableAccess_DoesRecordExist = m_clsTableAccess.DoesRecordExist(colMatchData, colMatchFields)
End Function

'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
' Implements Table Access Functions
'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
Private Function TableAccess_GetIsDeleted() As Boolean
    TableAccess_GetIsDeleted = m_clsTableAccess.GetIsDeleted()
End Function

Private Sub TableAccess_SetDeleteFields(colFields As Collection)
    m_clsTableAccess.SetDeleteFields colFields
End Sub

Private Sub TableAccess_GetTableDataFromSearch(sSearch As String, Optional bUseExistingSearch As Boolean = False)
    m_clsTableAccess.GetTableDataFromSearch sSearch
End Sub

Private Function TableAccess_GetLength(sField As String) As Integer
    TableAccess_GetLength = m_clsTableAccess.GetLength(sField)
End Function

Private Sub TableAccess_AddRow()
    m_clsTableAccess.AddRow
End Sub

Private Sub TableAccess_CloseRecordSet()
    m_clsTableAccess.CloseRecordSet
End Sub

Private Sub TableAccess_DeleteAllRows()
    m_clsTableAccess.DeleteAllRows
End Sub

Private Sub TableAccess_DeleteRow(colMatchData As Collection)
    m_clsTableAccess.DeleteRow colMatchData
End Sub

Private Function TableAccess_GetDate(sField As String, Optional ctrl As Object = Nothing, Optional ctrlLabel As Object = Nothing, Optional bCheck As Boolean = True, Optional bGetTime As Boolean = False) As Variant
    TableAccess_GetDate = m_clsTableAccess.GetDate(sField)
End Function

Private Function TableAccess_GetKeyMatchFields()
    Set TableAccess_GetKeyMatchFields = m_clsTableAccess.GetKeyMatchFields()
End Function

Private Function TableAccess_GetKeyMatchValues() As Variant
    Set TableAccess_GetKeyMatchValues = m_clsTableAccess.GetKeyMatchValues()
End Function

Private Function TableAccess_GetRecordSet() As ADODB.Recordset
    Set TableAccess_GetRecordSet = m_clsTableAccess.GetRecordSet()
End Function

Private Function TableAccess_GetTableData(Optional enumPopulateType As PopulateType = POPULATE_KEYS, Optional enumClassOption As ClassOption) As ADODB.Recordset
    Set TableAccess_GetTableData = m_clsTableAccess.GetTableData(enumPopulateType)
End Function

Private Function TableAccess_GetUpdated() As Boolean
    TableAccess_GetUpdated = m_clsTableAccess.GetUpdated()
End Function

Private Function TableAccess_GetVal(sField As Variant) As Variant
    TableAccess_GetVal = m_clsTableAccess.GetVal(sField)
End Function

Private Sub TableAccess_ValidateData(Optional sDesc As String = "")
        m_clsTableAccess.ValidateData sDesc
End Sub

Private Function TableAccess_MatchRecords(colFields As Collection, colMatchData As Collection) As ADODB.Recordset
    Set TableAccess_MatchRecords = m_clsTableAccess.MatchRecords(colFields, colMatchData)
End Function

Private Sub TableAccess_MoveFirst()
    m_clsTableAccess.MoveFirst
End Sub

Private Function TableAccess_MoveNext() As Boolean
    TableAccess_MoveNext = m_clsTableAccess.MoveNext()
End Function

Private Function TableAccess_RecordCount() As Integer
    TableAccess_RecordCount = m_clsTableAccess.RecordCount()
End Function

Private Function TableAccess_SetDate(sField As String, vVal As Variant) As Boolean
    TableAccess_SetDate = m_clsTableAccess.SetDate(sField, vVal)
End Function

Private Sub TableAccess_SetKeyMatchFields(colFields As Collection)
    m_clsTableAccess.SetKeyMatchFields colFields
End Sub

Private Sub TableAccess_SetKeyMatchValues(colValues As Collection)
    m_clsTableAccess.SetKeyMatchValues colValues
End Sub

Private Function TableAccess_SetNextRow() As Boolean
    TableAccess_SetNextRow = m_clsTableAccess.SetNextRow()
End Function

Private Sub TableAccess_SetPopulateType(enumType As PopulateType)
    
End Sub

Private Sub TableAccess_SetRecordSet(rs As ADODB.Recordset)
    m_clsTableAccess.SetRecordSet rs
End Sub

Private Sub TableAccess_SetUpdated()
    m_clsTableAccess.SetUpdated
End Sub

Private Function TableAccess_SetVal(sField As Variant, vVal As Variant) As Boolean
    TableAccess_SetVal = m_clsTableAccess.SetVal(sField, vVal)
End Function

Private Sub TableAccess_Update()
    m_clsTableAccess.Update
End Sub

Private Sub TableAccess_SetPopulateNull()
    m_clsTableAccess.SetPopulateNull
End Sub

Private Function TableAccess_GetSearch() As String
    TableAccess_GetSearch = m_sSearch
End Function

Private Function TableAccess_GetTable() As String
    TableAccess_GetTable = m_sTableName
End Function

Public Function TableAccess_GetUpdateValues() As Collection

End Function

Public Function TableAccess_GetUpdateFields() As Collection

End Function

Public Sub TableAccess_Create(sTable As String, Optional sFirstMatch As String = "")
    m_clsTableAccess.Create sTable, sFirstMatch
End Sub

Public Sub TableAccess_GetRowOfData(colListLine As Collection, Optional bIncludeHeader As Boolean = True)
    colListLine.Add GetPrincipalFirmName()
    colListLine.Add GetAddress()
    colListLine.Add GetAgreedProcFeeRate()
    colListLine.Add GetVolProcFeeAdjustment()
' TW 12/03/2007 EP2_1190
    colListLine.Add GetMortgageNetworkInd()
' TW 12/03/2007 EP2_1190 End
    colListLine.Add GetAppointmentID()
    colListLine.Add GetPrincipalFirmID()
End Sub
Friend Function GetPrincipalFirmName() As String
    GetPrincipalFirmName = CStr(m_clsTableAccess.GetVal("PrincipalFirmName"))
End Function
Friend Function GetAddress() As String
    GetAddress = CStr(m_clsTableAccess.GetVal("Address"))
End Function

Friend Function GetAgreedProcFeeRate() As String
    GetAgreedProcFeeRate = CStr(m_clsTableAccess.GetVal("AgreedProcFeeRate"))
End Function
Friend Function GetMortgageNetworkInd() As String
' TW 12/03/2007 EP2_1190
    If CStr(m_clsTableAccess.GetVal(MORTGAGENETWORKIND)) = "1" Then
        GetMortgageNetworkInd = "Yes"
    Else
        GetMortgageNetworkInd = ""
    End If
' TW 12/03/2007 EP2_1190 End
End Function
Friend Function GetVolProcFeeAdjustment() As String
    GetVolProcFeeAdjustment = CStr(m_clsTableAccess.GetVal("VolProcFeeAdjustment"))
End Function

Public Sub TableAccess_SetTableClass(clsTable As TableAccess)
    Set m_clsTableAccess = clsTable
End Sub

Public Sub TableAccess_DeleteRecords(Optional sDatabase As String = "")
    On Error GoTo Failed
    m_clsTableAccess.DeleteRecords sDatabase
    Exit Sub
Failed:
    g_clsErrorHandling.RaiseError Err.Number, Err.DESCRIPTION
End Sub

Private Sub TableAccess_SetDatabase(sDatabaseKey As String)
    m_clsTableAccess.SetDatabase sDatabaseKey
End Sub

Public Function TableAccess_GetDatabase() As String
    TableAccess_GetDatabase = m_clsTableAccess.GetDatabase()
End Function

Private Sub TableAccess_SetOrderCriteria(sCriteria As String)
    m_clsTableAccess.SetOrderCriteria sCriteria
End Sub

Private Sub TableAccess_SetDuplicateKeys(colDupKeys As Collection)
    m_clsTableAccess.SetDuplicateKeys colDupKeys
End Sub
Private Function TableAccess_GetDuplicateKeys() As Collection
    Set TableAccess_GetDuplicateKeys = m_clsTableAccess.GetDuplicateKeys()
End Function

Private Sub TableAccess_SetCollectionField(sField As String)
    m_clsTableAccess.SetCollectionField sField
End Sub

Private Function TableAccess_GetCollectionField() As String
    TableAccess_GetCollectionField = m_clsTableAccess.GetCollectionField()
End Function

Private Sub TableAccess_ApplyFilter(Optional sSearch As String)
    m_clsTableAccess.ApplyFilter sSearch
End Sub

Private Sub TableAccess_CancelFilter()
    m_clsTableAccess.CancelFilter
End Sub
